terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}
   
provider "yandex" {
  token     = "Y"
  cloud_id  = ""
  folder_id = ""
  zone      = "ru-central1-a"
}  

resource "yandex_iam_service_account" "ig-sa" {
  name        = "ig-sa"
  description = "service account to manage IG"
}

resource "yandex_resourcemanager_folder_iam_binding" "admin-account-iam" {
  folder_id = "b1g466a72p3364emafpr"
  role      = "admin"
  members   = [
    "serviceAccount:${yandex_iam_service_account.ig-sa.id}",
  ]
}










resource "yandex_compute_instance_group" "ig-2" {
  name = "fixed-ig-with-balancer100"
   folder_id = "b1g466a72p3364emafpr"
  service_account_id = "${yandex_iam_service_account.ig-sa.id}"
  instance_template {
    #name        =  "auto-instance-${timestamp()}"
    platform_id = "standard-v3"
    resources {
      memory = 2
      cores  = 2
    }

    boot_disk {
      mode = "READ_WRITE"
      initialize_params {
        image_id = "fd8qc4ui9j0elhh8im0n"
      }
    }

    network_interface {
      network_id = "${yandex_vpc_network.network-1.id}"
      subnet_ids = ["${yandex_vpc_subnet.subnet-1.id}"]
      nat       = true
    }

    metadata = {
    user-data = "${file("./meta.yml")}"
    }
  }

  scale_policy {
    fixed_scale {
      size = 2
    }
  }

  allocation_policy {
    zones = ["ru-central1-a"]
  }

  deploy_policy {
    max_unavailable = 1
    max_expansion   = 0
  }

load_balancer {
    target_group_name        = "target-group2"
    target_group_description = "load balancer target group2"
  }
  





  

}


resource "yandex_vpc_network" "network-1" {
  name = "network1"
}

resource "yandex_vpc_subnet" "subnet-1" {
  name           = "subnet1"
  zone           = "ru-central1-a"
  network_id     = "${yandex_vpc_network.network-1.id}"
  v4_cidr_blocks = ["192.168.10.0/24"]
}


resource "yandex_lb_network_load_balancer" "balance2" {
  name = "balanceex2"
  listener {
    name = "check80"
    port = 80
    external_address_spec {
      ip_version = "ipv4"
    }
  }
  attached_target_group {
    target_group_id = yandex_compute_instance_group.ig-2.load_balancer.0.target_group_id
    healthcheck {
      name = "my-listener"
        http_options {
          port = 80
          path = "/"
        }
    }
  }
}


output "lb_ip_address" {
  value = yandex_lb_network_load_balancer.balance2.*
}

# output "internal_ip_address_group" { 
#   value = yandex_compute_instance_group.ig-1.network_interface.ip_address
# }
# output "external_ip_address_group" {
#   value = yandex_compute_instance_group.ig-1.network_interface.nat_ip_address
# }











